: save load-bootstrap ; 
: boot-save 140 ` lin/of-key ] set-constant 150 ` lin/of-io ] set-constant 150 ` lin/of-seg ] set-constant $200000 ` elf-load-addr ] set-constant 178 ` lin/of-graph ] set-constant save ; 
: -of-save screen-width 6 / ` term-width ] set-constant screen-height 11 / ` term-height ] set-constant boot-save ; 
: of-save ` screen-height ] set-constant ` screen-width ] set-constant -of-save ; 
: of-1280x1024 1280 1024 of-save ; 
: of-1024x768 1024 768 of-save ; 
: pearpc-save 95 ` term-width ] set-constant 28 ` term-height ] set-constant 800 ` screen-width ] set-constant 600 ` screen-height ] set-constant boot-save ; 
: ed-add-comma dict-new-str 15 over 33 + +move $2c dict-new-str 32 + b! ; 
: ?ed-comma-find ed-add-comma dict-new-str 32 + ?find ; 
: ?ed-?comma-find ?ed-comma-find dup if; drop ?ed-find ; 
: ed-find-?macro ?ed-comma-find if 0 color ! ed-new-word 1 color ! ; then ed-find ; 
: ed-space sp sp sp color @ 1 =if ed-find-?macro ; then ed-find ; 
: ?ed-space ed-len @ 0=; ed-space cr ed-init ; 
: edac-token cursor-dict swap ?colormod+ nip cursor-token word-data4 | cursor-addr h! ; 
: ed-alter-color edac-token ed-init ; 
: var->const flags-const cursor-dict dict-flags! color-const-def ed-alter-color ; 
: const->var flags-var cursor-dict dict-flags! color-noop ed-alter-color ; 
: -ed-set-color color ! ed-input-line ?ed-space ed-input-line ; 
: ed-set-color ed-len @ 0if ed-alter-color ; then -ed-set-color ; 
: c-exec color-execute ed-set-color ; 
: c-compile color-compile ed-set-color ; 
: c-define color-define ed-set-color ; 
: c-const color-const-def ed-set-color ; 
: c-var color-noop ed-set-color ; 
: c-tic color-tic ed-set-color ; 
: c-string ed-len @ 0=; color-string -ed-set-color ; 
