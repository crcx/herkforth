: ed-go-to-src save-cursor-pos dup hi16 swap low16 over block sb->len 1- min cursor-pos ! cur-block ! ed-init ; 
: ed-cur-src cur-block @ to-hi16 cursor-pos @ | ; 
: ed-push-cursor ed-cur-src ed-back-push ; 
: ?ed-go-to-dict dup ?ed-fix-src dict-src@ 0; ed-push-cursor ed-go-to-src ; 
: ?ed-go-to-def cursor-dict ?ed-go-to-dict ; 
: ?ed-find-def ?ed-?comma-find 0=; ?ed-go-to-dict ; 
: ?ed-go-back ?ed-back-pop 0=; ed-go-to-src ; 
: -find-word h>a ?for dup h+@ word-data =if unloop drop a addr->src ; then ?next drop 0 ; 
: rest-of-source cb-size cursor-pos @ - 1- cursor-addr 2+ ; 
: next-block-num 2+ num-blocks @ umod ; 
: -fn-blocks next-block-num 2dup block dup sb->len swap -find-word ?; -fn-blocks ; 
: fn-blocks cursor-token word-data cur-block @ -fn-blocks nip nip ; 
: ros-find-word cursor-token word-data rest-of-source -find-word ; 
: ed-find-next ros-find-word dup 0if drop fn-blocks then ed-push-cursor ed-go-to-src ; 
: ed-rename dict-new-str 16 cursor-dict-str +move cr ed-init ; 
: set-block ed-push-cursor save-cursor-pos cur-block ! get-cursor-pos ed-init ; 
: ?ed-go-to-block ?ed-str->num 0=; even dup num-blocks @ >=if drop ; then set-block ; 
: yellow-zero ` 0 ] lit dict->token color-number | ; 
: init-block block yellow-zero over h! 1 over 1020 + ! $4e65770a swap 1024 + ! ; 
: new-block num-blocks @ dup init-block dup 2+ num-blocks ! set-block ; 
